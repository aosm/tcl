--- generic/tclArch.h.orig	1969-12-31 16:00:00.000000000 -0800
+++ generic/tclArch.h	2005-10-04 00:27:59.000000000 -0700
@@ -0,0 +1,48 @@
+/*
+ * Copyright (c) 2005 Apple Computer, Inc. All rights reserved.
+ *
+ * @APPLE_LICENSE_HEADER_START@
+ * 
+ * "Portions Copyright (c) 2004 Apple Computer, Inc.  All Rights
+ * Reserved.  This file contains Original Code and/or Modifications of
+ * Original Code as defined in and that are subject to the Apple Public
+ * Source License Version 1.0 (the 'License').  You may not use this file
+ * except in compliance with the License.  Please obtain a copy of the
+ * License at http://www.apple.com/publicsource and read it before using
+ * this file.
+ * 
+ * The Original Code and all software distributed under the License are
+ * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
+ * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
+ * INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE OR NON-INFRINGEMENT.  Please see the
+ * License for the specific language governing rights and limitations
+ * under the License."
+ * 
+ * @APPLE_LICENSE_HEADER_END@
+ */
+
+#ifndef __TCLARCH_H__
+#define __TCLARCH_H__
+
+#include <sys/cdefs.h>
+
+#ifdef __BIG_ENDIAN__
+#define WORDS_BIGENDIAN 1
+#else /* !__BIG_ENDIAN__ */
+/* #undef WORDS_BIGENDIAN */
+#endif /* __BIG_ENDIAN__ */
+
+#ifdef __LP64__
+#define TCL_WIDE_INT_IS_LONG 1
+#else /* !__LP64__ */
+#define TCL_WIDE_INT_TYPE long long
+#endif /* __LP64__ */
+
+#ifdef __DARWIN_UNIX03
+#define USE_TERMIOS 1
+#else /* !__DARWIN_UNIX03 */
+#define HAVE_PUTENV_THAT_COPIES 1
+#endif /* __DARWIN_UNIX03 */
+
+#endif /* __TCLARCH_H__ */
--- macosx/Makefile.orig	2004-03-01 09:50:20.000000000 -0800
+++ macosx/Makefile	2006-01-14 11:18:38.000000000 -0800
@@ -28,9 +28,8 @@
 # set to non-empty value to install manpages in addition to html help:
 INSTALL_MANPAGES 	?= 
 
-TCL_PACKAGE_PATH	?= "~/Library/Tcl /Library/Tcl /Network/Library/Tcl /System/Library/Tcl \
-			    ~/Library/Frameworks /Library/Frameworks /Network/Library/Frameworks \
-			    /System/Library/Frameworks"
+TCL_PACKAGE_PATH	?= "~/Library/Tcl /Library/Tcl /System/Library/Tcl \
+			    ~/Library/Frameworks /Library/Frameworks /System/Library/Frameworks"
 
 #-------------------------------------------------------------------------------------------------------
 # meta targets
@@ -84,6 +83,9 @@
 
 PROJECT			:= tcl
 PRODUCT_NAME		:= Tcl
+_nothing		:=
+# need a leading space before the 'b'
+ALT_VERSION		:= ${_nothing} b
 
 UNIX_DIR		:= ${CURDIR}/../unix
 GENERIC_DIR		:= ${CURDIR}/../generic
@@ -200,36 +202,40 @@
 endif
 endif
 # write Info.plist file
-	@printf > ${INSTALL_ROOT}${INFOPLIST} '\
-	<?xml version="1.0" encoding="UTF-8"?>\n\
-	<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN"\
-	"http://www.apple.com/DTDs/PropertyList-1.0.dtd">\n\
-	<plist version="1.0">\n\
-	<dict>\n\
-		<key>CFBundleDevelopmentRegion</key>\n\
-		<string>English</string>\n\
-		<key>CFBundleExecutable</key>\n\
-		<string>Tcl</string>\n\
-		<key>CFBundleGetInfoString</key>\n\
-		<string>Tcl Library ${PRODUCT_VERSION}, Copyright © ${YEAR} Tcl Core Team.\n\
-	MacOS X Port by Jim Ingham &lt;jingham@apple.com&gt; &amp; Ian Reid, Copyright\
-	© 2001-2002, Apple Computer, Inc.</string>\n\
-		<key>CFBundleIdentifier</key>\n\
-		<string>com.tcltk.tcllibrary</string>\n\
-		<key>CFBundleInfoDictionaryVersion</key>\n\
-		<string>6.0</string>\n\
-		<key>CFBundleName</key>\n\
-		<string>Tcl Library ${PRODUCT_VERSION}</string>\n\
-		<key>CFBundlePackageType</key>\n\
-		<string>FMWK</string>\n\
-		<key>CFBundleShortVersionString</key>\n\
-		<string>${PRODUCT_LONGVERSION}</string>\n\
-		<key>CFBundleSignature</key>\n\
-		<string>Tcl </string>\n\
-		<key>CFBundleVersion</key>\n\
-		<string>${PRODUCT_LONGVERSION}</string>\n\
-	</dict>\n\
-	</plist>\n'
+# gnumake 3.81beta3 doesn't do multiline strings in the same way, so we need
+# to use a single line.  We keep the multiline version around so we can
+# revert to it when the gnumake behavior is fixed.
+#	@printf > ${INSTALL_ROOT}${INFOPLIST} '\
+#	<?xml version="1.0" encoding="UTF-8"?>\n\
+#	<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN"\
+#	"http://www.apple.com/DTDs/PropertyList-1.0.dtd">\n\
+#	<plist version="1.0">\n\
+#	<dict>\n\
+#		<key>CFBundleDevelopmentRegion</key>\n\
+#		<string>English</string>\n\
+#		<key>CFBundleExecutable</key>\n\
+#		<string>Tcl</string>\n\
+#		<key>CFBundleGetInfoString</key>\n\
+#		<string>Tcl Library ${PRODUCT_VERSION}${ALT_VERSION}, Copyright © ${YEAR} Tcl Core Team.\n\
+#	MacOS X Port by Jim Ingham &lt;jingham@apple.com&gt; &amp; Ian Reid, Copyright\
+#	© 2001-2002, Apple Computer, Inc.</string>\n\
+#		<key>CFBundleIdentifier</key>\n\
+#		<string>com.tcltk.tcllibrary</string>\n\
+#		<key>CFBundleInfoDictionaryVersion</key>\n\
+#		<string>6.0</string>\n\
+#		<key>CFBundleName</key>\n\
+#		<string>Tcl Library ${PRODUCT_VERSION}${ALT_VERSION}</string>\n\
+#		<key>CFBundlePackageType</key>\n\
+#		<string>FMWK</string>\n\
+#		<key>CFBundleShortVersionString</key>\n\
+#		<string>${PRODUCT_LONGVERSION}${ALT_VERSION}</string>\n\
+#		<key>CFBundleSignature</key>\n\
+#		<string>Tcl </string>\n\
+#		<key>CFBundleVersion</key>\n\
+#		<string>${PRODUCT_LONGVERSION}${ALT_VERSION}</string>\n\
+#	</dict>\n\
+#	</plist>\n'
+	@printf > ${INSTALL_ROOT}${INFOPLIST} '<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">\n<plist version="1.0">\n<dict>\n\t<key>CFBundleDevelopmentRegion</key>\n\t<string>English</string>\n\t<key>CFBundleExecutable</key>\n\t<string>Tcl</string>\n\t<key>CFBundleGetInfoString</key>\n\t<string>Tcl Library ${PRODUCT_VERSION}${ALT_VERSION}, Copyright © ${YEAR} Tcl Core Team.\n\tMacOS X Port by Jim Ingham &lt;jingham@apple.com&gt; &amp; Ian Reid, Copyright\n\t© 2001-2002, Apple Computer, Inc.</string>\n\t<key>CFBundleIdentifier</key>\n\t<string>com.tcltk.tcllibrary</string>\n\t<key>CFBundleInfoDictionaryVersion</key>\n\t<string>6.0</string>\n\t<key>CFBundleName</key>\n\t<string>Tcl Library ${PRODUCT_VERSION}${ALT_VERSION}</string>\n\t<key>CFBundlePackageType</key>\n\t<string>FMWK</string>\n\t<key>CFBundleShortVersionString</key>\n\t<string>${PRODUCT_LONGVERSION}${ALT_VERSION}</string>\n\t<key>CFBundleSignature</key>\n\t<string>Tcl </string>\n\t<key>CFBundleVersion</key>\n\t<string>${PRODUCT_LONGVERSION}${ALT_VERSION}</string>\n</dict>\n</plist>\n'
 
 #-------------------------------------------------------------------------------------------------------
 
--- unix/configure.orig	2004-07-26 14:40:46.000000000 -0700
+++ unix/configure	2005-10-04 01:52:28.000000000 -0700
@@ -2902,14 +2902,13 @@
 	Rhapsody-*|Darwin-*)
 	    SHLIB_CFLAGS="-fno-common"
 	    SHLIB_LD="cc -dynamiclib \${LDFLAGS}"
-	    TCL_SHLIB_LD_EXTRAS="-compatibility_version ${TCL_VERSION} -current_version \${VERSION} -install_name \${DYLIB_INSTALL_DIR}/\${TCL_LIB_FILE} -prebind -seg1addr 0xa000000"
-	    TK_SHLIB_LD_EXTRAS="-compatibility_version ${TK_VERSION} -current_version \${VERSION} -install_name \${DYLIB_INSTALL_DIR}/\${TK_LIB_FILE} -prebind -seg1addr 0xb000000"
+	    TCL_SHLIB_LD_EXTRAS="-compatibility_version ${TCL_VERSION} -current_version \${VERSION} -install_name \${DYLIB_INSTALL_DIR}/\${TCL_LIB_FILE}"
+	    TK_SHLIB_LD_EXTRAS="-compatibility_version ${TK_VERSION} -current_version \${VERSION} -install_name \${DYLIB_INSTALL_DIR}/\${TK_LIB_FILE}"
 	    SHLIB_LD_LIBS='${LIBS}'
 	    SHLIB_SUFFIX=".dylib"
-	    DL_OBJS="tclLoadDyld.o"
+	    DL_OBJS="tclLoadDl.o"
 	    PLAT_OBJS="tclMacOSXBundle.o"
 	    DL_LIBS=""
-	    LDFLAGS="$LDFLAGS -prebind"
 	    CC_SEARCH_FLAGS=""
 	    LD_SEARCH_FLAGS=""
 	    CFLAGS_OPTIMIZE="-Os"
@@ -7424,13 +7423,18 @@
 # Protect against shell expansion while executing Makefile rules.
 # Protect against Makefile macro expansion.
 cat > conftest.defs <<\EOF
+/WORDS_BIGENDIAN/d
+/TCL_WIDE_INT_IS_LONG/d
+/TCL_WIDE_INT_TYPE/d
+/USE_TERMIOS/d
+/HAVE_PUTENV_THAT_COPIES/d
 s%#define \([A-Za-z_][A-Za-z0-9_]*\) *\(.*\)%-D\1=\2%g
 s%[ 	`~#$^&*(){}\\|;'"<>?]%\\&%g
 s%\[%\\&%g
 s%\]%\\&%g
 s%\$%$$%g
 EOF
-DEFS=`sed -f conftest.defs confdefs.h | tr '\012' ' '`
+DEFS=`sed -f conftest.defs confdefs.h | tr '\012' ' '`'-include tclArch.h '
 rm -f conftest.defs
 
 
--- unix/Makefile.in.orig	2004-07-26 14:40:46.000000000 -0700
+++ unix/Makefile.in	2005-10-04 00:47:46.000000000 -0700
@@ -328,6 +328,7 @@
 
 GENERIC_HDRS = \
 	$(GENERIC_DIR)/tcl.h \
+	$(GENERIC_DIR)/tclArch.h \
 	$(GENERIC_DIR)/tclDecls.h \
 	$(GENERIC_DIR)/tclInt.h \
 	$(GENERIC_DIR)/tclIntDecls.h \
@@ -640,7 +641,7 @@
 	    fi
 	@echo "Installing header files";
 	@for i in $(GENERIC_DIR)/tcl.h $(GENERIC_DIR)/tclDecls.h \
-		$(GENERIC_DIR)/tclPlatDecls.h ; \
+		$(GENERIC_DIR)/tclArch.h $(GENERIC_DIR)/tclPlatDecls.h ; \
 	    do \
 	    $(INSTALL_DATA) $$i $(INCLUDE_INSTALL_DIR); \
 	    done;
@@ -751,7 +751,7 @@
 	fi;
 	$(CC) -c $(CC_SWITCHES) \
 		-DTCL_BUILDTIME_LIBRARY="\"${TCL_BUILDTIME_LIBRARY}\"" \
-		-DTCL_TEST $(UNIX_DIR)/tclAppInit.c
+		-mdynamic-no-pic -DTCL_TEST $(UNIX_DIR)/tclAppInit.c
 	rm -f tclTestInit.o
 	mv tclAppInit.o tclTestInit.o
 	@if test -f tclAppInit.sav ; then \
@@ -763,7 +763,7 @@
 	    rm -f tclAppInit.sav; \
 	    mv tclAppInit.o tclAppInit.sav; \
 	fi;
-	$(CC) -c $(CC_SWITCHES) \
+	$(CC) -c $(CC_SWITCHES) -mdynamic-no-pic \
 		-DTCL_BUILDTIME_LIBRARY="\"${TCL_BUILDTIME_LIBRARY}\"" \
 		-DTCL_TEST -DTCL_XT_TEST $(UNIX_DIR)/tclAppInit.c
 	rm -f xtTestInit.o
@@ -791,7 +791,7 @@
 	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/regerror.c
 
 tclAppInit.o: $(UNIX_DIR)/tclAppInit.c
-	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclAppInit.c
+	$(CC) -c $(CC_SWITCHES) -mdynamic-no-pic $(UNIX_DIR)/tclAppInit.c
 
 # On unix we want to use the normal malloc/free implementation, so we
 # specifically set the USE_TCLALLOC flag.
--- doc/tclsh.1~	Thu May  4 13:35:15 2006
+++ doc/tclsh.1	Thu May  4 13:35:15 2006
@@ -54,12 +54,12 @@
 .PP
 If you create a Tcl script in a file whose first line is
 .CS
-\fB#!/usr/local/bin/tclsh\fR
+\fB#!/usr/bin/tclsh\fR
 .CE
 then you can invoke the script file directly from your shell if
 you mark the file as executable.
 This assumes that \fBtclsh\fR has been installed in the default
-location in /usr/local/bin;  if it's installed somewhere else
+location in /usr/bin;  if it's installed somewhere else
 then you'll have to modify the above line to match.
 Many UNIX systems do not allow the \fB#!\fR line to exceed about
 30 characters in length, so be sure that the \fBtclsh\fR
--- generic/tclEnv.c.orig	2003-11-05 17:10:42.000000000 -0800
+++ generic/tclEnv.c	2007-02-08 23:51:26.000000000 -0800
@@ -34,14 +34,6 @@
 #endif
 
 /*
- * For MacOS X
- */
-#if defined(__APPLE__) && defined(__DYNAMIC__)
-#include <crt_externs.h>
-char **environ = NULL;
-#endif
-
-/*
  * Declarations for local procedures defined in this file:
  */
 
@@ -91,13 +83,6 @@
     int i;
 
     /*
-     * For MacOS X
-     */
-#if defined(__APPLE__) && defined(__DYNAMIC__)
-    environ = *_NSGetEnviron();
-#endif
-
-    /*
      * Synchronize the values in the environ array with the contents
      * of the Tcl "env" variable.  To do this:
      *    1) Remove the trace that fires when the "env" var is unset.
--- unix/tclUnixPort.h.orig	2004-05-17 10:36:01.000000000 -0700
+++ unix/tclUnixPort.h	2007-02-08 23:43:20.000000000 -0800
@@ -485,10 +485,16 @@
  * Variables provided by the C library:
  */
 
-#if defined(_sgi) || defined(__sgi) || (defined(__APPLE__) && defined(__DYNAMIC__))
-#   define environ _environ
-#endif
+#if defined(__APPLE__) && defined(__DYNAMIC__)
+#   include <crt_externs.h>
+#   define environ (*_NSGetEnviron())
+#   define USE_PUTENV 1
+#else
+#   if defined(_sgi) || defined(__sgi)
+#	define environ _environ
+#   endif
 extern char **environ;
+#endif
 
 /*
  * At present (12/91) not all stdlib.h implementations declare strtod.
--- generic/tcl.h.orig	2004-07-13 12:21:17.000000000 -0700
+++ generic/tcl.h	2007-03-04 02:12:58.000000000 -0800
@@ -328,6 +328,22 @@
 #endif
 
 /*
+ * Darwin specifc configure overrides (to support fat compiles, where
+ * configure runs only once for multiple architectures):
+ */
+
+#ifdef __APPLE__
+#   ifdef __LP64__
+#	undef TCL_WIDE_INT_TYPE
+#	define TCL_WIDE_INT_IS_LONG 1
+#    else /* !__LP64__ */
+#	define TCL_WIDE_INT_TYPE long long
+#	undef TCL_WIDE_INT_IS_LONG
+#    endif /* __LP64__ */
+#    undef HAVE_STRUCT_STAT64
+#endif /* __APPLE__ */
+
+/*
  * Define Tcl_WideInt to be a type that is (at least) 64-bits wide,
  * and define Tcl_WideUInt to be the unsigned variant of that type
  * (assuming that where we have one, we can have the other.)
--- generic/tclGet.c.orig	2002-11-18 18:34:49.000000000 -0800
+++ generic/tclGet.c	2007-03-04 01:50:17.000000000 -0800
@@ -92,7 +92,11 @@
      * an int.
      */
 
-    if ((errno == ERANGE) || (((long)(int) i) != i)) {
+    if ((errno == ERANGE)
+#if (LONG_MAX > INT_MAX)
+	    || (i > UINT_MAX) || (i < -(long)UINT_MAX)
+#endif
+    ) {
         if (interp != (Tcl_Interp *) NULL) {
 	    Tcl_SetResult(interp, "integer value too large to represent",
 		    TCL_STATIC);
