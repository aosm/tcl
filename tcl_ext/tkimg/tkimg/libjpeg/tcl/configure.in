dnl
dnl Process this file with autoconf to produce a configure script.
dnl
AC_REVISION($Id: configure.in 129 2007-10-12 23:39:51Z andreas_kupries $)

#--------------------------------------------------------------------
# Configure script for package 'jpegtcl', as distributed at November 20, 2001.
# TEA compliant.
#--------------------------------------------------------------------

AC_INIT([jpegtcl],[1.0])

TEA_INIT([3.7])

AC_CONFIG_AUX_DIR(../../tclconfig)

#--------------------------------------------------------------------
# Load the tclConfig.sh file
#--------------------------------------------------------------------

TEA_PATH_TCLCONFIG
TEA_LOAD_TCLCONFIG

#-----------------------------------------------------------------------
# Handle the --prefix=... option by defaulting to what Tcl gave.
# Must be called after TEA_LOAD_TCLCONFIG and before TEA_SETUP_COMPILER.
#-----------------------------------------------------------------------

TEA_PREFIX

#-----------------------------------------------------------------------
# Standard compiler checks.
# This sets up CC by using the CC env var, or looks for gcc otherwise.
# This also calls AC_PROG_CC, AC_PROG_INSTALL and a few others to create
# the basic setup necessary to compile executables.
#-----------------------------------------------------------------------

JPEG_CFLAGS="$CFLAGS"
TEA_SETUP_COMPILER
JPEG_CC=$CC

#-----------------------------------------------------------------------
# Specify the C source files to compile in TEA_ADD_SOURCES,
# public headers that need to be installed in TEA_ADD_HEADERS,
# stub library C source files to compile in TEA_ADD_STUB_SOURCES,
# and runtime Tcl library files in TEA_ADD_TCL_SOURCES.
# This defines PKG(_STUB)_SOURCES, PKG(_STUB)_OBJECTS, PKG_HEADERS
# and PKG_TCL_SOURCES.
#-----------------------------------------------------------------------

TEA_ADD_SOURCES([jpegtcl.c jpegtclStubInit.c])

TEA_ADD_SOURCES([
	../jcapimin.c	../jcapistd.c	../jccoefct.c
	../jccolor.c	../jcdctmgr.c	../jchuff.c
	../jcinit.c	../jcmainct.c	../jcmarker.c
	../jcmaster.c	../jcomapi.c	../jcparam.c
	../jcphuff.c	../jcprepct.c	../jcsample.c
	../jctrans.c	../jdapimin.c	../jdapistd.c
	../jdatadst.c	../jdatasrc.c	../jdcoefct.c
	../jdcolor.c	../jddctmgr.c	../jdhuff.c
	../jdinput.c	../jdmainct.c	../jdmarker.c
	../jdmaster.c	../jdmerge.c	../jdphuff.c
	../jdpostct.c	../jdsample.c	../jdtrans.c
	../jerror.c	../jfdctflt.c	../jfdctfst.c
	../jfdctint.c	../jidctflt.c	../jidctfst.c
	../jidctint.c	../jidctred.c	../jquant1.c
	../jquant2.c	../jutils.c	../jmemmgr.c
	../jmemansi.c
])

TEA_ADD_HEADERS([jpegtcl.h jpegtclDecls.h])
TEA_ADD_HEADERS([jpegtclDeclsMask.h jpegtclDeclsUnmask.h])

TEA_ADD_INCLUDES([-I\"`\${CYGPATH} \${srcdir}`\"])
TEA_ADD_INCLUDES([-I\"./libjpeg\"])
TEA_ADD_LIBS([])
TEA_ADD_CFLAGS([])
TEA_ADD_STUB_SOURCES([jpegtclStubLib.c])
TEA_ADD_SOURCES([jpegtclStubLib.c])
TEA_ADD_TCL_SOURCES([])

#--------------------------------------------------------------------
# __CHANGE__
# Choose which headers you need.  Extension authors should try very
# hard to only rely on the Tcl public header files.  Internal headers
# contain private data structures and are subject to change without
# notice.
# This MUST be called after TEA_LOAD_TCLCONFIG / TEA_LOAD_TKCONFIG
#--------------------------------------------------------------------

TEA_PUBLIC_TCL_HEADERS
#TEA_PRIVATE_TCL_HEADERS

#--------------------------------------------------------------------
# A few miscellaneous platform-specific items:
#
# We have to define a special symbol for Windows (BUILD_jpegtcl in this
# case) so that we create the export library with the dll.
#
# Windows creates a few extra files that need to be cleaned up.
# We can add more files to clean if our extension creates any extra
# files in the future.
#
# Define any extra compiler flags in the PACKAGE_CFLAGS variable.
# These will be appended to the current set of compiler flags for
# your system.
#--------------------------------------------------------------------

if test "${TEA_PLATFORM}" = "windows" ; then
    AC_DEFINE(BUILD_jpegtcl)
    CLEANFILES="*.lib *.dll *.exp *.ilk *.pdb vc*.pch"
else
    CLEANFILES=""
fi
AC_SUBST(CLEANFILES)

#--------------------------------------------------------------------
# Check whether --enable-threads or --disable-threads was given.
# So far only Tcl responds to this one.
#--------------------------------------------------------------------

TEA_ENABLE_THREADS

#--------------------------------------------------------------------
# The statement below defines a collection of symbols related to
# building as a shared library instead of a static library.
#--------------------------------------------------------------------

TEA_ENABLE_SHARED

#--------------------------------------------------------------------
# This macro figures out what flags to use with the compiler/linker
# when building shared/static debug/optimized objects.  This information
# can be taken from the tclConfig.sh file, but this figures it all out.
#--------------------------------------------------------------------

TEA_CONFIG_CFLAGS

#--------------------------------------------------------------------
# Set the default compiler switches based on the --enable-symbols option.
#--------------------------------------------------------------------

TEA_ENABLE_SYMBOLS

#--------------------------------------------------------------------
# Everyone should be linking against the Tcl stub library.  If you
# can't for some reason, remove this definition.  If you aren't using
# stubs, you also need to modify the SHLIB_LD_LIBS setting below to
# link against the non-stubbed Tcl library.
#--------------------------------------------------------------------

AC_DEFINE(USE_TCL_STUBS)

#--------------------------------------------------------------------
# This macro generates a line to use when building a library.  It
# depends on values set by the TEA_ENABLE_SHARED, TEA_ENABLE_SYMBOLS,
# and TEA_LOAD_TCLCONFIG macros above.
#--------------------------------------------------------------------

TEA_MAKE_LIB

#--------------------------------------------------------------------
# __CHANGE__
# Add platform libs to LIBS or SHLIB_LD_LIBS as necessary.
#--------------------------------------------------------------------

SHLIB_LD_LIBS="${SHLIB_LD_LIBS} \${TCL_LIBS}"

#--------------------------------------------------------------------
# Find tclsh so that we can run pkg_mkIndex to generate the pkgIndex.tcl
# file during the install process.  Don't run the TCLSH_PROG through
# ${CYGPATH} because it's being used directly by make.
# Require that we use a tclsh shell version 8.2 or later since earlier
# versions have bugs in the pkg_mkIndex routine.
# Add WISH as well if this is a Tk extension.
#--------------------------------------------------------------------

TEA_PROG_TCLSH
TEA_EXPORT_CONFIG(jpegtcl)

#--------------------------------------------------------------------
# We call the configure for the jpeg code on our own, without using
# AC_CONFIG_SUBDIR ... Using that requires a symlink, thus making setup
# difficult, and the transfer information ot it is busted, due to how
# TEA handles CFLAGS.
#--------------------------------------------------------------------

case "$srcdir" in
.) # No --srcdir option.  We are building in place.
  jpegdir=$srcdir/.. ;;
/*) # Absolute path.
  jpegdir=$srcdir/.. ;;
*) # Relative path.
  jpegdir=../$ac_dots$srcdir/.. ;;
esac

mkdir libjpeg
sleep 2        ; # Wait two seconds for the directory to actually appear (Windows).
cd    libjpeg
env CC="$JPEG_CC" CFLAGS="$JPEG_CFLAGS" $jpegdir/configure
cd ..

#--------------------------------------------------------------------
# Finally, substitute all of the various values into the Makefile.
# You may alternatively have a special pkgIndex.tcl.in or other files
# which require substituting th AC variables in.  Include these here.
#--------------------------------------------------------------------

AC_OUTPUT([Makefile jpegtclConfig.sh])

#--------------------------------------------------------------------
