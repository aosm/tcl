2004-05-23  Andreas Kupries  <andreas_kupries@users.sourceforge.net>

	*
	* Released and tagged Tcllib 1.6.1 ========================
	* 

2004-02-26  Andreas Kupries  <andreas_kupries@users.sourceforge.net>

	* snit.test:    Codified the requirement of Tcl 8.4 into
	* pkgIndex.tcl: package index and test suite.

2004-02-15  Andreas Kupries  <andreas_kupries@users.sourceforge.net>

	*
	* Released and tagged Tcllib 1.6 ========================
	* 

2004-02-07  Will Duquette  <will@wjduquette.com>

	* README.txt:  Added 0.93 information to README.txt.

	* snit.tcl:    Fixed bug: "$obj info vars" used to leave out "options"
	* snit.test:   if no options were defined.  It's clearer if the 
	               behavior is always the same.

		       Fixed tcllib bugs item #852945: variable.  The
		       statement "variable ::my::qualified::name" in an
		       instance method now makes "name" available, just
		       as the standard "variable" command does.

		       Fixed bug: in some cases the type command was
		       created even if there was an error defining the
		       type.  The type command is now cleaned up in these
		       cases.  (Credit Andy Goth)

	* snit.tcl:    Implemented RFE 844766: need ability to split class
	* snit.test:   defs across files.  Added the snit::typemethod and
	* snit.html:   snit::method commands; these allow typemethods and
		       methods to be defined after the class already exists.

2004-02-07  Will Duquette  <will@wjduquette.com>

	* All:         Updated version to 0.93.
	* snit.tcl:    The %AUTO% name counter wraps around to 0 when it
	               reaches 2^31 - 1, to prevent integer overflow
		       errors.
	* snit.html:   Minor corrections and updates.
	* faq.html

2003-12-06  Will Duquette  <will@wjduquette.com>

	* All:         Updated version to 0.92.

	* snit.tcl     Snit now propagates errorCode properly when 
	* snit.test    propagating errors.

2003-12-01  Andreas Kupries  <andreas_kupries@users.sourceforge.net>

	* snit.man:    Updated to changes in the .html files.
	* snitfaq.man: 

2003-11-21  Will Duquette  <will@wjduquette.com>

	* snit.tcl:      Updated version to 0.91.
	* pkgIndex.tcl: 

	* snit.tcl:      Added the "expose" statement to type and widget
	                 definitions.
	* snit.test:     Added appropriate tests.
	* snit.html:     Added documentation for "expose".
	* faq.html:      Updated the FAQ entries.

	* snit.tcl:      Added "string match" patterns to the Snit info
	                 methods.
	* snit.test:     Added appropriate tests.
	* snit.html:     Updated documentation.


2003-10-28  Andreas Kupries  <andreask@activestate.com>

	* snit.man:    Fixed typos in documentation.
	* snitfaq.man: 

2003-10-27  Will Duquette  <will@wjduquette.com>

	* snit.html: Fixed typos in documentation.
	* faq.html:

2003-10-27  Andreas Kupries  <andreask@activestate.com>

	* snit.man:    Updated to changes in the .html files.
	* snitfaq.man: 

2003-10-25  Will Duquette  <will@wjduquette.com>

	* snit.tcl:  Added the "except" clause for "delegate method *" and
	* snit.test: "delegate option *".  This allows the user to
	  	     explicitly exclude certain methods and options.
		     Added appropriate tests.

	* snit.html: Gave the Snit FAQ a bit of an overhaul, and added 
	* faq.html:  information corresponding to the recent code
	  	     changes, including a great deal of material on Snit
		     and the Tk option database.  Updated the Snit man
		     page to be consistent with the recent code changes.

2003-10-23  Andreas Kupries  <andreask@activestate.com>

	* snit.man: Updated from Will's html doc's.

2003-10-23  Will Duquette  <will@wjduquette.com>

	* snit.html: Added documentation for the new "hulltype",
	  	     "widgetclass", and "install" commands.  Updated the
	  	     documentation for "installhull" to show the new
	  	     "installhull using" syntax.  Updated the
	  	     documentation for "option" and "delegate option" to
	  	     show how to specify the resource and class names for
	  	     options.  Added a section on the interaction between
	  	     Snit and the Tk option database.

2003-10-21  Will Duquette  <will@wjduquette.com>

	* snit.tcl:  Add the "hulltype" command.  This allows the snit::widget 
	* snit.test: author to choose whether the hull should be a frame
	  	     or a toplevel.  Tests have been updated as usual.

2003-10-20  Will Duquette  <will@wjduquette.com>

	* snit.tcl:  The new "install" command can now be used to install
	* snit.test: components for snit::types as well.  It doesn't add
		     any value, since there's no option database, but at
	             least the syntax will be the same.

		     "install" now initializes the component properly
		     from the option database when "option *" has been
		     delegated to it.

		     Tests have been updated as usual.

2003-10-19  Will Duquette  <will@wjduquette.com>

	* snit.tcl:  During normal widget creation, the default values
	* snit.test: for a widget's local options are overridden by
	  	     values from the option database.

		     Array %TYPE%::Snit_compoptions now lists delegated 
		     option names for each component.

		     Added a new command, "install", for use in widget
		     and widgetadaptor constructors.  Install creates a
		     widget, assigning it to a component; it also queries
		     the option database for any option values that are
		     delegated to this component.

		     Modified installhull, adding a new form that queries
		     the option database as appropriate for options
		     delegated to the hull widget.

		     At this point, the only options whose default values
		     do not come from the option database in the proper
		     way are those implicitly delegated by "delegate
		     option *" to a non-hull widget.  I need to think
		     about those.

		     Of course, new tests have been added for all of this.

		     The version number in snit.tcl has been updated to 0.84.

2003-10-18  Will Duquette  <will@wjduquette.com>

	* snit.tcl:  Added the "widgetclass" statement; this allows
	* snit.test: snit::widgets (and nothing else) to explicitly set
	             the widget class name passed to the hull as "-class".
	             In addition, the hull's -class is set automatically, 
		     to the explicit widgetclass, if any, or to the 
		     widget type name with an initial capital letter.

                     Next, an object's options now have real resource
                     and class names, which are reported correctly by 
                     "$obj configure".  By default, the resource name
                     is just the option name minus the hyphen, and
                     the class name is just the resource name with an
                     initial capital.

                     In both the "option" and "delegate option"
                     statements, the option name may be specified as
                     a pair or a triple, e.g.,

                       option {-name name Name}

                     Thus, the resource name and class name can be
                     specified explicitly.

                     In previous versions, the resource name and
                     class name returned by configure for delegated
                     options was the resource name and class name
                     returned by the component.  This is no longer
                     true; configure now returns the resource and
                     class name defined in the type definition.

2003-10-17  Will Duquette  <will@wjduquette.com>

	* snit.html: Added typeconstructor documentation.
	* faq.html:  

	* snit.tcl: Implemented typeconstructors.  A typeconstructor's
                    body is executed as part of the compiled type
	            definition; it has access to all of the typevariables
	            and typemethods.  Its job is to initialize arrays,
	            set option database values, and like that.
	
	* snit.test: Added tests for typeconstructors.

2003-10-16  Will Duquette  <will@wjduquette.com>

	* README.txt: Updated to reflect snit's presence in tcllib, and
	  to point to this ChangeLog file.

2003-09-30  Andreas Kupries  <andreask@activestate.com>

	* snit.tcl: A number of changes to the code generation part.
	  - Usage of [subst]'s was superfluous, removed, simple string
	    interpolation now.

	  - Now 'namespace eval type' enclosing the generated code
	    anymore. Such an eval is now done only at the top of the
	    generated code to define the namespace, and to
	    define/initialize the typevariables. All procedure definitions
	    are now outside of 'namespace eval' and use fully qualified
	    command names instead.

	  - Moved the code in [snit::Define] which instantiated the class
	    using the generated code into it own helper command,
	    [snit::DefineDo]. Overiding this command allows users of the
	    snit package perform other actions on the newly defined
	    class. One example is that of a snit-compiler which goes
	    through a file containing tcl code and replaces all snit::*
	    definitions with the generated code.

	  Motivation for the change: When applying procomp to procedure
	  definitions inside of a 'namespace eval' they are not
	  byte-compiled, but kept as encoded literal. This is a direct
	  consequence of 'namespace eval' not having a compile
	  function. It also means that introspection, i.e. [info body]
	  does recover the actual procedure definition. By using procedure
	  definitions outside of namespace eval, but fully qualified names
	  this limitation of procomp is avoided. The aforementioned snit
	  compiler application is another part for this, ensuring that
	  instead of keeping the whole class definition as one literal for
	  the snit::* call we actually have tcl code to compile and hide.

	* snit.tcl:     Updated the version number to 0.83
	* pkgIndex.tcl:
	* snit.man:
	* snitfaq.man:

2003-07-18  Andreas Kupries  <andreask@activestate.com>

	* snit.test: Fixed SF tcllib bug #772535. Instead of using a
	* snit.tcl:  variable reference in the callback a regular command
	             is called, with the unchanging 'selfns' as argument.
		     From there things go through the regular dispatching
		     mechanism after the actual instance name was obtained.
		     Updated all affected tests.

		     Updated dmethod-1.5 also, 'string' delivers a
		     different error message.

2003-07-16  Andreas Kupries  <andreask@activestate.com>

	* snit.man:    Added references to bug trackers, as part of
	* snitfaq.man: caveats. Also added note about bwidget/snit
	               interaction.

	* snit.tcl: Integrated latest (small) change to original code base
	  (was not released yet). Removes bad trial to fix up error stack.
	  We are now at version 0.82. Added note to developers explaining
	  the catch in Snit_tracer.

2003-07-15  Andreas Kupries  <andreask@activestate.com>

	* snit.tcl:    Imported new module into tcllib.
	* snit.test:   snit = Snit Is Not IncrTcl
	* snit.html:   Author: William Duquette
	* faq.html:    OO package + megawidget framework.
	* README.txt:
	* license.txt:
	* pkgIndex.tcl:
	* snit.man:
	* snitfaq.man:

